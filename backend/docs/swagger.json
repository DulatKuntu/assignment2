{
    "swagger": "2.0",
    "info": {
        "description": "This is a DB assignment.",
        "title": "Database Assignment",
        "contact": {},
        "version": "1"
    },
    "host": "localhost:4000",
    "basePath": "/",
    "paths": {
        "/addresses/create": {
            "post": {
                "description": "Create a new address with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Create a new address",
                "parameters": [
                    {
                        "description": "Address object",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Address"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/addresses/delete/{id}": {
            "get": {
                "description": "Delete an address based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Delete an address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/addresses/get/{id}": {
            "get": {
                "description": "Get an address based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get an address by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Address"
                        }
                    }
                }
            }
        },
        "/addresses/getAll": {
            "get": {
                "description": "Get a list of all addresses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get all addresses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Address"
                            }
                        }
                    }
                }
            }
        },
        "/addresses/update": {
            "post": {
                "description": "Update an address with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Update an address",
                "parameters": [
                    {
                        "description": "Address object",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Address"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/appointments/create": {
            "post": {
                "description": "Create a new appointment with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Create a new appointment",
                "parameters": [
                    {
                        "description": "Appointment object",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Appointment"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/appointments/delete/{id}": {
            "get": {
                "description": "Delete an appointment based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Delete an appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/appointments/get/{id}": {
            "get": {
                "description": "Get an appointment based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get an appointment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Appointment"
                        }
                    }
                }
            }
        },
        "/appointments/getAll": {
            "get": {
                "description": "Get a list of all appointments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get all appointments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Appointment"
                            }
                        }
                    }
                }
            }
        },
        "/appointments/update": {
            "post": {
                "description": "Update an appointment with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Update an appointment",
                "parameters": [
                    {
                        "description": "Appointment object",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Appointment"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/caregivers/create": {
            "post": {
                "description": "Create a new caregiver with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caregivers"
                ],
                "summary": "Create a new caregiver",
                "parameters": [
                    {
                        "description": "Caregiver object",
                        "name": "caregiver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Caregiver"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/caregivers/delete/{id}": {
            "get": {
                "description": "Delete a caregiver based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caregivers"
                ],
                "summary": "Delete a caregiver",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Caregiver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/caregivers/get/{id}": {
            "get": {
                "description": "Get a caregiver based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caregivers"
                ],
                "summary": "Get a caregiver by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Caregiver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Caregiver"
                        }
                    }
                }
            }
        },
        "/caregivers/getAll": {
            "get": {
                "description": "Get a list of all caregivers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caregivers"
                ],
                "summary": "Get all caregivers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Caregiver"
                            }
                        }
                    }
                }
            }
        },
        "/caregivers/update": {
            "post": {
                "description": "Update a caregiver with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caregivers"
                ],
                "summary": "Update a caregiver",
                "parameters": [
                    {
                        "description": "Caregiver object",
                        "name": "caregiver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Caregiver"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/jobApplications/create": {
            "post": {
                "description": "Create a new job application with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobApplications"
                ],
                "summary": "Create a new job application",
                "parameters": [
                    {
                        "description": "Job Application object",
                        "name": "jobApplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.JobApplication"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/jobApplications/delete/{id}": {
            "get": {
                "description": "Delete a job application based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobApplications"
                ],
                "summary": "Delete a job application",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/jobApplications/get/{id}": {
            "get": {
                "description": "Get a job application based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobApplications"
                ],
                "summary": "Get a job application by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JobApplication"
                        }
                    }
                }
            }
        },
        "/jobApplications/getAll": {
            "get": {
                "description": "Get a list of all job applications",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobApplications"
                ],
                "summary": "Get all job applications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JobApplication"
                            }
                        }
                    }
                }
            }
        },
        "/jobApplications/update": {
            "post": {
                "description": "Update a job application with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobApplications"
                ],
                "summary": "Update a job application",
                "parameters": [
                    {
                        "description": "Job Application object",
                        "name": "jobApplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.JobApplication"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/jobs/create": {
            "post": {
                "description": "Create a new job with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Create a new job",
                "parameters": [
                    {
                        "description": "Job object",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Job"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/jobs/delete/{id}": {
            "get": {
                "description": "Delete a job based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Delete a job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/jobs/get/{id}": {
            "get": {
                "description": "Get a job based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get a job by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Job"
                        }
                    }
                }
            }
        },
        "/jobs/getAll": {
            "get": {
                "description": "Get a list of all jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get all jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Job"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/update": {
            "post": {
                "description": "Update a job with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Update a job",
                "parameters": [
                    {
                        "description": "Job object",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Job"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/members/create": {
            "post": {
                "description": "Create a new member with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Create a new member",
                "parameters": [
                    {
                        "description": "Member object",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Member"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/members/delete/{id}": {
            "get": {
                "description": "Delete a member based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Delete a member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/members/get/{id}": {
            "get": {
                "description": "Get a member based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Get a member by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Member"
                        }
                    }
                }
            }
        },
        "/members/getAll": {
            "get": {
                "description": "Get a list of all members",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Get all members",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Member"
                            }
                        }
                    }
                }
            }
        },
        "/members/update": {
            "post": {
                "description": "Update a member with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Update a member",
                "parameters": [
                    {
                        "description": "Member object",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Member"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/create": {
            "post": {
                "description": "Create a new user with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/delete/{id}": {
            "get": {
                "description": "Delete a user based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users/get/{id}": {
            "get": {
                "description": "Get a user based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/users/getAll": {
            "get": {
                "description": "Get a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/update": {
            "post": {
                "description": "Update a user with the provided data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "model.Address": {
            "type": "object",
            "properties": {
                "house_number": {
                    "type": "integer"
                },
                "member_user_id": {
                    "type": "integer"
                },
                "street": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                }
            }
        },
        "model.Appointment": {
            "type": "object",
            "properties": {
                "appointment_date": {
                    "type": "string"
                },
                "appointment_id": {
                    "type": "integer"
                },
                "appointment_time": {
                    "type": "string"
                },
                "caregiver_user_id": {
                    "type": "integer"
                },
                "member_user_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "work_hours": {
                    "type": "integer"
                }
            }
        },
        "model.Caregiver": {
            "type": "object",
            "properties": {
                "caregiver_user_id": {
                    "type": "integer"
                },
                "caregiving_type": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "hourly_rate": {
                    "type": "number"
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "model.Job": {
            "type": "object",
            "properties": {
                "date_posted": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "member_user_id": {
                    "type": "integer"
                },
                "other_requirements": {
                    "type": "string"
                },
                "required_caregiving_type": {
                    "type": "string"
                }
            }
        },
        "model.JobApplication": {
            "type": "object",
            "properties": {
                "caregiver_user_id": {
                    "type": "integer"
                },
                "date_applied": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                }
            }
        },
        "model.Member": {
            "type": "object",
            "properties": {
                "house_rules": {
                    "type": "string"
                },
                "member_user_id": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "given_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profile_description": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}